"""adds PENDING as default for the project_status

Revision ID: f553a30cf72e
Revises: ba2416bc551a
Create Date: 2023-10-11 22:28:28.878215

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f553a30cf72e'
down_revision: Union[str, None] = 'ba2416bc551a'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_admin_users_user_id', table_name='admin_users')
    op.drop_table('admin_users')
    op.drop_index('ix_assumptions_id', table_name='assumptions')
    op.drop_table('assumptions')
    op.drop_index('ix_assumptions_files_id', table_name='assumptions_files')
    op.drop_table('assumptions_files')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('assumptions_files',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('input_object_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('output_object_key', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('input_filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('output_filename', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='assumptions_files_pkey')
    )
    op.create_index('ix_assumptions_files_id', 'assumptions_files', ['id'], unique=False)
    op.create_table('assumptions',
    sa.Column('id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('project_id', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('interest_calculation_method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('depreciation_method', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('average_loan_term', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('inflation_rate', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('number_of_months_to_focast', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('administration_fee', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('isActive', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='assumptions_pkey')
    )
    op.create_index('ix_assumptions_id', 'assumptions', ['id'], unique=False)
    op.create_table('admin_users',
    sa.Column('user_id', sa.INTEGER(), autoincrement=True, nullable=False),
    sa.Column('email', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('first_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('hashed_password', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('is_active', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_admin', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_creator', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('is_viewer', sa.BOOLEAN(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('work_address', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('user_id', name='admin_users_pkey'),
    sa.UniqueConstraint('email', name='admin_users_email_key')
    )
    op.create_index('ix_admin_users_user_id', 'admin_users', ['user_id'], unique=False)
    # ### end Alembic commands ###
